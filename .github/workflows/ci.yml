name: CI

on:
  push:
    branches:
      - main
  
  pull_request:
    branches:
      - main

jobs:
  linux-ubuntu18:
    runs-on: ubuntu-18.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.18.x'
      - name: Extract branch name & commit
        id: extract_branch
        run: |
          echo "::set-output name=git_hash::$(git rev-parse --short=7 "$GITHUB_SHA")"
          echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//\./g')"
      - name: install apt-get deps
        run: |
          sudo apt-get update
          sudo apt-get install libboost-all-dev libcurl4-openssl-dev
          sudo apt-get install libdb++-dev build-essential libtool autotools-dev automake pkg-config bsdmainutils ccache python3 python3-pip python3-setuptools python-setuptools
          sudo apt-get install libevent-dev python3-zmq python3-dev libboost-python-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libminiupnpc-dev libzmq3-dev
      - name: build Dynex
        run: |
          (
          rm -rf build
          mkdir build;
          cd build;
          cmake ..;
          make -j2;
          )
      - name: create artifacts
        if: success()
        run: |
          mkdir -p ./release
          mv ./build/src/connectivity_tool ./release/connectivity_tool
          mv ./build/src/dynexd ./release/dynexd
          mv ./build/src/simplewallet ./release/simplewallet
          mv ./build/src/walletd ./release/walletd
          mv ./release Dynex-${{ steps.extract_branch.outputs.branch }}-${{ steps.extract_branch.outputs.git_hash }}
      - name: Archive artifacts on GH
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: Dynex-${{ steps.extract_branch.outputs.branch }}-${{ steps.extract_branch.outputs.git_hash }}-ubuntu18-linux-x64
          path: Dynex-${{ steps.extract_branch.outputs.branch }}-${{ steps.extract_branch.outputs.git_hash }}

  linux-ubuntu20:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.18.x'
      - name: Extract branch name & commit
        id: extract_branch
        run: |
          echo "::set-output name=git_hash::$(git rev-parse --short=7 "$GITHUB_SHA")"
          echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//\./g')"
      - name: install apt-get deps
        run: |
          sudo apt-get update
          sudo apt-get install libboost-all-dev libcurl4-openssl-dev
          sudo apt-get install libdb++-dev build-essential libtool autotools-dev automake pkg-config bsdmainutils ccache python3 python3-pip python3-setuptools python-setuptools
          sudo apt-get install libevent-dev python3-zmq python3-dev libboost-python-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libminiupnpc-dev libzmq3-dev
      - name: build Dynex
        run: |
          (
          rm -rf build
          mkdir build;
          cd build;
          cmake ..;
          make -j2;
          )
      - name: create artifacts
        if: success()
        run: |
          mkdir -p ./release
          mv ./build/src/connectivity_tool ./release/connectivity_tool
          mv ./build/src/dynexd ./release/dynexd
          mv ./build/src/simplewallet ./release/simplewallet
          mv ./build/src/walletd ./release/walletd
          mv ./release Dynex-${{ steps.extract_branch.outputs.branch }}-${{ steps.extract_branch.outputs.git_hash }}
      - name: Archive artifacts on GH
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: Dynex-${{ steps.extract_branch.outputs.branch }}-${{ steps.extract_branch.outputs.git_hash }}-ubuntu20-linux-x64
          path: Dynex-${{ steps.extract_branch.outputs.branch }}-${{ steps.extract_branch.outputs.git_hash }}

  linux-ubuntu22:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.18.x'
      - name: Extract branch name & commit
        id: extract_branch
        run: |
          echo "::set-output name=git_hash::$(git rev-parse --short=7 "$GITHUB_SHA")"
          echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//\./g')"
      - name: install apt-get deps
        run: |
          sudo apt-get update
          sudo apt-get install libboost-all-dev libcurl4-openssl-dev
          sudo apt-get install libdb++-dev build-essential libtool autotools-dev automake pkg-config bsdmainutils ccache python3 python3-pip python3-setuptools python-setuptools
          sudo apt-get install libevent-dev python3-zmq python3-dev libboost-python-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libminiupnpc-dev libzmq3-dev
      - name: build Dynex
        run: |
          (
          rm -rf build
          mkdir build;
          cd build;
          cmake ..;
          make -j2;
          )
      - name: create artifacts
        if: success()
        run: |
          mkdir -p ./release
          mv ./build/src/connectivity_tool ./release/connectivity_tool
          mv ./build/src/dynexd ./release/dynexd
          mv ./build/src/simplewallet ./release/simplewallet
          mv ./build/src/walletd ./release/walletd
          mv ./release Dynex-${{ steps.extract_branch.outputs.branch }}-${{ steps.extract_branch.outputs.git_hash }}
      - name: Archive artifacts on GH
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: Dynex-${{ steps.extract_branch.outputs.branch }}-${{ steps.extract_branch.outputs.git_hash }}-ubuntu22-linux-x64
          path: Dynex-${{ steps.extract_branch.outputs.branch }}-${{ steps.extract_branch.outputs.git_hash }}
